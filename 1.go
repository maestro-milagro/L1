package main

import "fmt"

//Дана структура Human (с произвольным набором полей и методов).
//Реализовать встраивание методов в структуре Action от родительской структуры Human (аналог наследования).

// В го нет наследования в превычном понимании этого,
// но основных функций наследования(Повторное использование кода, Динамический полиморфизм, Динамическая диспетчеризация)
// можно добиться с помощью композиции, встраивания и интерфейсов

// Чтобы получить возможность реализовывать методы Human под наши нужды мы создали интерфейс,
// который определяет поведение структур реализующих его, но не определяет саму реализацию
type Doer interface {
	do()
}

type Human struct {
}

func (h *Human) do() {
	fmt.Println("I am doing something")
}

// Сделав Human членом Action мы получили доступ ко всем его полям и функциям
type Action struct {
	Human
}

// Реализация метода родительского класса
func (a *Action) do() {
	fmt.Println("I am doing something ... actually")
}
func main() {
	var some Action
	some.do()
}
